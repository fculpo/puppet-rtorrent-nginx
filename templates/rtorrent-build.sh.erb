#!/bin/bash

# Stop on first error
set -e

BUILD_FOLDER="/tmp/rtorrent-build/"

# Make a new rtorrent-build directory since we don't know the state of the old one
rm -rf $BUILD_FOLDER
mkdir $BUILD_FOLDER
cd $BUILD_FOLDER

# Build libtorrent
# git clone https://github.com/rakshasa/libtorrent.git
wget "http://rtorrent.net/downloads/libtorrent-<%= scope['rtorrent::libtorrent_version'] -%>.tar.gz"
gunzip libtorrent-<%= scope['rtorrent::libtorrent_version'] -%>.tar.gz
tar xvf libtorrent-<%= scope['rtorrent::libtorrent_version'] -%>.tar
cd libtorrent-<%= scope['rtorrent::libtorrent_version'] %>
./autogen.sh
./configure --with-posix-fallocate 
make
make install
cd $BUILD_FOLDER

PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
export PKG_CONFIG_PATH

# Updated library cache
ldconfig

# Build rtorrent
#git clone https://github.com/rakshasa/rtorrent
wget "http://rtorrent.net/downloads/rtorrent-<%= scope['rtorrent::rtorrent_version'] -%>.tar.gz"
gunzip rtorrent-<%= scope['rtorrent::rtorrent_version'] -%>.tar.gz
tar xvf rtorrent-<%= scope['rtorrent::rtorrent_version'] -%>.tar
cd rtorrent-<%= scope['rtorrent::rtorrent_version'] %>
./autogen.sh
./configure --with-xmlrpc-c=/usr/bin/xmlrpc-c-config
make
make install
cd $BUILD_FOLDER

# Cleanup
cd /
rm -rf $BUILD_FOLDER
